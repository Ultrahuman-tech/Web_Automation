name: Ring Tests

on:
  schedule:
    # üïí Runs daily at 8:00 AM IST (2:30 AM UTC)
    - cron: '30 3 * * *'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Ring Tests
        id: tests
        run: |
          mkdir -p test-results
          npx playwright test tests/ring/ --reporter=json > test-results/results.json || echo "TESTS_FAILED=true" >> $GITHUB_ENV

      - name: Parse Test Results
        if: always()
        run: |
          node -e "
          const fs = require('fs');
          const path = 'test-results/results.json';
          if (!fs.existsSync(path)) { console.log('No test results found'); process.exit(0); }
          const data = JSON.parse(fs.readFileSync(path, 'utf-8'));
          let passed = 0, failed = 0, skipped = 0, total = 0;
          if (data.suites) {
            const countTests = suites => suites.forEach(s => {
              if (s.specs) {
                s.specs.forEach(spec => {
                  spec.tests.forEach(t => {
                    total++;
                    if (t.results.some(r => r.status === 'passed')) passed++;
                    else if (t.results.some(r => r.status === 'failed')) failed++;
                    else skipped++;
                  });
                });
              }
              if (s.suites) countTests(s.suites);
            });
            countTests(data.suites);
          }
          console.log(`‚úÖ Passed: ${passed}, ‚ùå Failed: ${failed}, ‚ö™ Skipped: ${skipped}, Total: ${total}`);
          fs.appendFileSync(process.env.GITHUB_ENV, `TESTS_PASSED=${passed}\nTESTS_FAILED_COUNT=${failed}\nTESTS_SKIPPED=${skipped}\nTESTS_TOTAL=${total}\n`);
          "

      - name: Upload HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      - name: Slack Notification
        if: always()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "üß™ *Ring Tests Summary* for `${{ github.ref_name }}` by `${{ github.actor }}`\n\n\
              ‚úÖ Passed: ${{ env.TESTS_PASSED }}\n\
              ‚ùå Failed: ${{ env.TESTS_FAILED_COUNT }}\n\
              ‚ö™ Skipped: ${{ env.TESTS_SKIPPED }}\n\
              üìä Total: ${{ env.TESTS_TOTAL }}\n\n\
              üîó <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Report>\n\n\
              ${{ env.TESTS_FAILED == 'true' && ':x: Some tests failed!' || ':white_check_mark: All tests passed!' }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          