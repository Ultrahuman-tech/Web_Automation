# name: Playwright Tests
# on:
#   push:
#     branches: [ main, master ]
#   pull_request:
#     branches: [ main, master ]
# jobs:
#   test:
#     timeout-minutes: 60
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
#     - uses: actions/setup-node@v4
#       with:
#         node-version: lts/*
#     - name: Install dependencies
#       run: npm ci
#     - name: Install Playwright Browsers
#       run: npx playwright install --with-deps
#     - name: Run Playwright tests
#       run: npx playwright test
#     - uses: actions/upload-artifact@v4
#       if: ${{ !cancelled() }}
#       with:
#         name: playwright-report
#         path: playwright-report/
#         retention-days: 30

name: Playwright Tests

on:
  schedule:
    - cron: '0 8 * * *'     # 8:00 AM UTC
    - cron: '30 2 * * *'    # 8:00 AM IST (2:30 AM UTC)
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        id: run_tests
        run: |
          npx playwright test --reporter=json > report.json || true

      - name: Parse test results
        id: summary
        run: |
          PASSED=$(jq '[.suites[].specs[].tests[] | select(.results[].status == "passed")] | length' report.json)
          FAILED=$(jq '[.suites[].specs[].tests[] | select(.results[].status == "failed")] | length' report.json)
          TOTAL=$((PASSED + FAILED))

          echo "passed=$PASSED" >> $GITHUB_OUTPUT
          echo "failed=$FAILED" >> $GITHUB_OUTPUT
          echo "total=$TOTAL" >> $GITHUB_OUTPUT
          echo "status=$([[ $FAILED -eq 0 ]] && echo success || echo failure)" >> $GITHUB_OUTPUT

      - name: Upload HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      - name: Slack Notification
        if: always()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": ":${{ steps.summary.outputs.status == 'success' && 'white_check_mark' || 'x'}}: *Playwright Tests Completed*\n*Branch:* `${{ github.ref_name }}` by `${{ github.actor }}`\n*Total:* ${{ steps.summary.outputs.total }}\n*Passed:* ${{ steps.summary.outputs.passed }}\n*Failed:* ${{ steps.summary.outputs.failed }}\n\nðŸ”— <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Full Report>"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}


